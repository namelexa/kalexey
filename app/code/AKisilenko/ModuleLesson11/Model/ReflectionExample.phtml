<?php

declare(strict_types=1);

namespace AKisilenko\ModuleLesson11\Model\ReflectionExample;

class NamesOfConstants
{

    /**
     * Declare constants
     */
    const PARENT1 = 'PARENT1';
    const PARENT2 = 'PARENT2';

    /**
     * @var $pub_var
     */
    public $pub_var;

    /**
     * @param $pub_var
     */
    public function getErrorMessage($pub_var = PARENT1)
    {
        return $pub_var;
    }

}

/**
 * Class ShowConstants
 * @package AKisilenko\ModuleLesson11\Model\reflection_Example
 */
class ShowConstants extends NamesOfConstants
{
    /**
     * @return array
     * @throws \ReflectionException
     */
    const MY_CLASS = 'My class';
    public  function getConstants():array
    {
        return (new \ReflectionClass(static::class))->getConstants();
    }

//    /**
//     * @param $item
//     * @return array
//     * @throws \ReflectionException
//     */
//    public function getClassMethods():array
//    {
//
//        $reflection = new \ReflectionClass(ShowConstants);
//        $methods = $reflection->getMethods(ReflectionMethod::IS_PUBLIC);
//        foreach ($methods as $method) {
//            if ($method['class'] == $reflection->getName())
//                $methods[] = $method['name'];
//        }
//        return $method;
//    }
    /**
     * @return \ReflectionMethod[]
     * @throws \ReflectionException
     */
    public function getMethods()
    {
        $item = new \ReflectionClass(__CLASS__);
        return $item->getMethods();
    }

}

//var_dump(ShowConstants::getMethods());